#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

arch="amd64"
case $(uname -m) in
arm64) arch="arm64" ;;
esac

# shellcheck source=../lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

# shellcheck disable=SC2207
return_vals=($(get_platform "$arch" "$ASDF_INSTALL_VERSION"))
platform=${return_vals[0]}
zformat=${return_vals[1]}

mkdir -p "$ASDF_DOWNLOAD_PATH"

release_file="$ASDF_DOWNLOAD_PATH/$TOOL_NAME-$ASDF_INSTALL_VERSION.$zformat"

# Download zip file to the download directory
download_release "$platform" "$arch" "$ASDF_INSTALL_VERSION" "$zformat" "$release_file"

#  Extract contents of zip file into the download directory
if [[ "$zformat" == "zip" ]]; then
  unzip -qq "$release_file" -d "$ASDF_DOWNLOAD_PATH" || fail "Could not extract $release_file"
else
  tar xf "$release_file" --directory="$ASDF_DOWNLOAD_PATH" || fail "Could not extract $release_file"
fi

# Versions after dev-2023-02 are zipped up in the CI to keep executable permissions, and then zipped up again by GitHub.
if [ -f "$ASDF_DOWNLOAD_PATH/dist.zip" ]; then
  unzip -qq "$ASDF_DOWNLOAD_PATH/dist.zip" -d "$ASDF_DOWNLOAD_PATH" || fail "Could not extract $ASDF_DOWNLOAD_PATH/dist.zip"
  rm "$ASDF_DOWNLOAD_PATH/dist.zip"
fi
for tarball in "$ASDF_DOWNLOAD_PATH/dist.tar."{gz,bz2,xz}; do
  if [[ -f $tarball ]]; then
    tar xf "$tarball" --directory="$ASDF_DOWNLOAD_PATH" || fail "Could not extract $tarball"
    rm "$tarball"
    break
  fi
done

for nested_folder in "$ASDF_DOWNLOAD_PATH/$TOOL_NAME-$platform-"*; do
  if [[ -d $nested_folder ]]; then
    mv "$nested_folder"/* "$ASDF_DOWNLOAD_PATH" || fail "Could not move contents of $nested_folder"
    rmdir "$nested_folder" || fail "Could not remove $nested_folder"
  fi
done

# Remove the zip file since we don't need to keep it
rm "$release_file"
